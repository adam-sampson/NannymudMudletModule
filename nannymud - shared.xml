<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>NannymudTriggers</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>HP/SP Trigger</name>
				<script>--NannymudVariables.char[NannymudVariables.currentcharacter]
--if NannymudVariables.char == nil then
--  
--end
NannymudVariables = NannymudVariables or {}
NannymudVariables.char = NannymudVariables.char or {}
NannymudVariables.char[NannymudVariables.currentcharacter] = NannymudVariables.char[NannymudVariables.currentcharacter] or {}

NannymudVariables.char[NannymudVariables.currentcharacter].hp = tonumber(matches[2])
NannymudVariables.char[NannymudVariables.currentcharacter].hpmax = tonumber(matches[3])
NannymudVariables.char[NannymudVariables.currentcharacter].sp = tonumber(matches[4])
NannymudVariables.char[NannymudVariables.currentcharacter].spmax = tonumber(matches[5])

--echo(matches[4])

GUI.Health:setValue(NannymudVariables.char[NannymudVariables.currentcharacter].hp, 
                    NannymudVariables.char[NannymudVariables.currentcharacter].hpmax)
GUI.Health.front:echo("    " .. NannymudVariables.char[NannymudVariables.currentcharacter].hp .. " / " .. NannymudVariables.char[NannymudVariables.currentcharacter].hpmax .. " HP")

GUI.Mana:setValue(NannymudVariables.char[NannymudVariables.currentcharacter].sp, 
                  NannymudVariables.char[NannymudVariables.currentcharacter].spmax)
GUI.Mana.front:echo("    " .. NannymudVariables.char[NannymudVariables.currentcharacter].sp .. " / " .. NannymudVariables.char[NannymudVariables.currentcharacter].spmax .. " SP")

-- Share hp with other open windows...
raiseGlobalEvent("multiplayer_share_hp", "Character:" .. NannymudVariables.currentcharacter .. " hp:" .. NannymudVariables.char[NannymudVariables.currentcharacter].hp .. "/" .. NannymudVariables.char[NannymudVariables.currentcharacter].hpmax .. " sp:" .. NannymudVariables.char[NannymudVariables.currentcharacter].sp .. "/" .. NannymudVariables.char[NannymudVariables.currentcharacter].spmax)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\*\* HP: (\d+)/(\d+)   SP: (\d+)/(\d+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>BP Trigger</name>
				<script>--NannymudVariables.char[NannymudVariables.currentcharacter]
--if NannymudVariables.char == nil then
--  
--end

NannymudVariables.char[NannymudVariables.currentcharacter].hp = tonumber(matches[2])
NannymudVariables.char[NannymudVariables.currentcharacter].hpmax = tonumber(matches[3])
--NannymudVariables.char[NannymudVariables.currentcharacter].sp = tonumber(matches[4])
--NannymudVariables.char[NannymudVariables.currentcharacter].spmax = tonumber(matches[5])

--echo(matches[4])

GUI.Health:setValue(NannymudVariables.char[NannymudVariables.currentcharacter].hp, 
                    NannymudVariables.char[NannymudVariables.currentcharacter].hpmax)
GUI.Health.front:echo("    " .. NannymudVariables.char[NannymudVariables.currentcharacter].hp .. " / " .. NannymudVariables.char[NannymudVariables.currentcharacter].hpmax .. " BP")

--GUI.Mana:setValue(NannymudVariables.char[NannymudVariables.currentcharacter].sp, 
--                 NannymudVariables.char[NannymudVariables.currentcharacter].spmax)
--GUI.Mana.front:echo("    " .. NannymudVariables.char[NannymudVariables.currentcharacter].sp .. " / " .. NannymudVariables.char[NannymudVariables.currentcharacter].spmax .. " SP")
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\*\* BP: (\d+)/(\d+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Health Saturation Trigger</name>
				<script>NannymudVariables.char[NannymudVariables.currentcharacter].thirst = matches[2]
NannymudVariables.char[NannymudVariables.currentcharacter].full = matches[3]
NannymudVariables.char[NannymudVariables.currentcharacter].drunk = matches[4]
NannymudVariables.char[NannymudVariables.currentcharacter].hsat = matches[5]</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>&lt;Thirst: (\d+)% Full: (\d+)% Drunk: (\d+)% HSat:(\d+)%&gt;</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Get character name</name>
				<script>NannymudVariables = NannymudVariables or {}

NannymudVariables.currentcharacter = matches[2]</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\*\*\*\* Your character name is: (\w+) \*\*\*\*</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Detect Login</name>
				<script>send("test_prompt **** Your character name is: $name ****")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>------------------------------ GENERAL INFO -------------------------------</string>
					<string>You are already playing, I will remove your statue.</string>
					<string>Your last login was from</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Cast Light</name>
				<script>NannymudVariables.lightspellstatus = true</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>You cast Light and start to illuminate the room.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Light Expired</name>
				<script>NannymudVariables.lightspellstatus = false</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Your light spell is no longer in effect.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>CommCaptureChain</name>
				<script>-- For multi-line tells we need a chain that captures anything afterwards...

--showMultimatches()

local comfrom = matches[2]
local comtype = matches[3]
local comtext = matches[4]

-- Ignore Sylvester, monk
if comfrom == "monk" then
  setTriggerStayOpen("CommCaptureChain",0)
  return
end

--echo(comtext)
GUI.CommRow.Cons:echo("\n" .. getTime(true))
GUI.CommRow.Cons:echo("\n" .. comfrom .. " " .. comtype .. " " .. NannymudVariables.currentcharacter .. ": " .. comtext)

-- Share communication with other open windows...
raiseGlobalEvent("multiplayer_share_communication", "\n" .. getTime(true))
raiseGlobalEvent("multiplayer_share_communication", "\n" .. comfrom .. " " .. comtype .. " " .. NannymudVariables.currentcharacter .. ": " .. comtext)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>100</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>(.+) (tells) you: (.+)</string>
					<string>(\w+) (says): (.+)</string>
					<string>(\w+) (whispers) to you: (.+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CommMoreLines</name>
					<script>local commtext = string.trim(matches[2])

GUI.CommRow.Cons:echo(" " .. commtext)

-- Share communication with other open windows...
raiseGlobalEvent("multiplayer_share_communication", " " .. commtext)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    (.+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>CommCloseChain</name>
					<script>--echo("CommCloseString: ")
--echo(matches[1])
--echo("\n")
local stringin = matches[1]

local stringcheck = nil
local stringcheck = string.match(stringin,"tells you:") or stringcheck
local stringcheck = string.match(stringin,"says:") or stringcheck
local stringcheck = string.match(stringin,"whispers to you:") or stringcheck

if stringcheck == nil then
  --echo("CommCloseString")
  setTriggerStayOpen("CommCaptureChain",0)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?![\s]).*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>LineCaptureChain</name>
				<script>-- For multi-line tells we need a chain that captures anything afterwards...

--showMultimatches()

local comtext = matches[1]

--echo(comtext)
GUI.CommRow.Cons:echo("\n" .. getTime(true))
GUI.CommRow.Cons:echo("\n" .. comtext)

-- Share communication with other open windows...
--raiseGlobalEvent("multiplayer_share_communication", "\n" .. getTime(true))
--raiseGlobalEvent("multiplayer_share_communication", "\n" .. comtext)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>100</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\[.+?\].+</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>LineMoreLines</name>
					<script>local commtext = string.trim(matches[2])

GUI.CommRow.Cons:echo(" " .. commtext)

-- Share communication with other open windows...
--raiseGlobalEvent("multiplayer_share_communication", " " .. commtext)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    (.+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>LineCloseChain</name>
					<script>--echo("CommCloseString: ")
--echo(matches[1])
--echo("\n")
local stringin = matches[1]

local stringcheck = nil
local stringcheck = string.match(stringin,"^%[") or stringcheck

if stringcheck == nil then
  --echo("CommCloseString")
  setTriggerStayOpen("LineCaptureChain",0)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?![\s]).*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>NannymudTimers</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
		</TimerGroup>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>NannymudAliases</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>To Frog Pub</name>
				<script></script>
				<command>w;w;w;w;w;s;s;s;call eagle;w;n;n;n;w;w;w;climb;jump;n;n;d;enter hut</command>
				<packageName></packageName>
				<regex>/tfp</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Frog Pub to Green</name>
				<script></script>
				<command>out;se;swim;s;s;s;e;fast;n;n;n;n;n;n;n;n;n</command>
				<packageName></packageName>
				<regex>/fptg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Vampires Guild to Green</name>
				<script></script>
				<command>w;w;out;se;s;e;e;e;e;e;s;s;e;e;e;e;e;e;e;e;e</command>
				<packageName></packageName>
				<regex>/vamptg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Vampires Guild</name>
				<script></script>
				<command>w;w;w;w;w;w;w;w;w;n;n;w;w;w;w;w;n;nw;enter;e;e</command>
				<packageName></packageName>
				<regex>/tvamp</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Monk Healer</name>
				<script></script>
				<command>w;w;w;w;w;w;w;w;w;w;w;w;w;w;n;n;n;w;w;n;w;sw</command>
				<packageName></packageName>
				<regex>/tmh</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Monk Healer to Green</name>
				<script></script>
				<command>out;e;s;e;e;s;s;s;e;e;e;e;e;e;e;e;e;e;e;e;e;e</command>
				<packageName></packageName>
				<regex>/mhtg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Sim Guild</name>
				<script></script>
				<command>w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;w;enter gate;w;w;w;w;w;w;enter dak</command>
				<packageName></packageName>
				<regex>/tdak</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Sim Guild to Green</name>
				<script></script>
				<command>out;e;e;e;e;e;e;enter gate;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e;e</command>
				<packageName></packageName>
				<regex>/daktg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Three Kings Pub</name>
				<script></script>
				<command>w;w;w;w;w;w;s;s;s;s;s;s;s;w</command>
				<packageName></packageName>
				<regex>/tking</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Three Kings to Green</name>
				<script></script>
				<command>e;n;n;n;n;n;n;n;e;e;e;e;e;e</command>
				<packageName></packageName>
				<regex>/kingtg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Cult Guild</name>
				<script></script>
				<command>w;w;w;w;n;n;n;n;w;n;n;n;n;ne;n</command>
				<packageName></packageName>
				<regex>/tcult</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Cult to Green</name>
				<script></script>
				<command>s;sw;s;s;s;s;e;s;s;s;s;e;e;e;e</command>
				<packageName></packageName>
				<regex>/culttg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Khorne Guild</name>
				<script></script>
				<command>w;w;w;w;w;w;w;w;w;s;s;s;s;s;s;s;w;w;s;s;s;d</command>
				<packageName></packageName>
				<regex>/tkh</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Khorne Guild to Green</name>
				<script></script>
				<command>u;n;n;n;e;e;n;n;n;n;n;n;n;e;e;e;e;e;e;e;e;e</command>
				<packageName></packageName>
				<regex>/khtg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Check Health Saturation</name>
				<script></script>
				<command>test_prompt &lt;Thirst: $soak Full: $full Drunk: $tox HSat:
$hsat&gt;</command>
				<packageName></packageName>
				<regex>/tox</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Tall Ships Pub</name>
				<script></script>
				<command>s;s;s;s;s;s;s;s;s;e;e;se;e;e;ne;e;e;e;e;s;e</command>
				<packageName></packageName>
				<regex>/ttsp</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Tall Ships Pub to Green</name>
				<script></script>
				<command>w;n;w;w;w;w;sw;w;w;nw;w;w;n;n;n;n;n;n;n;n;n</command>
				<packageName></packageName>
				<regex>/tsptg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Monk Guild</name>
				<script></script>
				<command>s;s;s;w;w;n;n;e</command>
				<packageName></packageName>
				<regex>/tmg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Monk Guild to Green</name>
				<script></script>
				<command>w;s;s;e;e;n;n;n</command>
				<packageName></packageName>
				<regex>/mgtg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Dak to Chaos</name>
				<script></script>
				<command>out;e;e;nw;nw;w;nw;w;w;nw;d;n;n;w</command>
				<packageName></packageName>
				<regex>/daktochaos</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Chaos to dak</name>
				<script></script>
				<command>e;s;s;u;se;e;e;se;e;se;se;w;w;enter dak</command>
				<packageName></packageName>
				<regex>/chaostodak</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>speedwalk</name>
				<script>--for count, direction in string.gmatch(matches[2], "([0-9])([neswdu])") do	
echo(matches[2])	
for count, direction in string.gmatch(matches[2], "(%d+)(%a+)") do
  --echo(count)
  --echo(direction)
	count = (count == "" and 1 or count)
  -- echo(direction)
	for i=1, count do send(direction) end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^\.(.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>To Dark</name>
				<script></script>
				<command>w;w;w;w;n;n;n;n;n;n;n;n;n;d;w;w;n;n;n;n;n</command>
				<packageName></packageName>
				<regex>/tdark</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Dark to Green</name>
				<script></script>
				<command>s;s;s;s;s;e;e;u;s;s;s;s;s;s;s;s;s;e;e;e;e</command>
				<packageName></packageName>
				<regex>/darktg</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>multiplayer forward command</name>
				<script>local charshort = matches[2]
local command = matches[3]
--echo(charshort .. ". " .. command .. "\n")
local charlong = "Error"
if charshort == "hh" then
  charlong = "Helix"
elseif charshort == "ll" then
  charlong = "Lightbender"
elseif charshort == "rr" then
  charlong = "Ruin"
elseif charshort == "qq" then
  charlong = "Qantaqa"
elseif charshort == "tt" then
  charlong = "Theshadow"
elseif charshort == "nn" then
  charlong = "Necksnapper"
else
  charlong = "Error2"
end
--echo(charlong .. " " .. command .. "\n")
raiseEvent("multiplayer_share_command",charlong .. " " .. command)
raiseGlobalEvent("multiplayer_share_command",charlong .. " " .. command)</script>
				<command></command>
				<packageName></packageName>
				<regex>^(hh|ll|rr|qq|tt|nn) (.+)</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Monk Aliases</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Pick Herbs From Scroll</name>
				<script></script>
				<command>e;e;ph;ph;e;ph;ph;s;ph;ph;s;ph;n;w;ph;ph;n;w;w</command>
				<packageName></packageName>
				<regex>^/phfs</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Pick Herbs From Chapel</name>
				<script></script>
				<command>n;n;e;e;ph;ph;e;ph;ph;s;ph;ph;s;ph;n;w;ph;ph;n;w;w;s;s</command>
				<packageName></packageName>
				<regex>^/phfc</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Sim Aliases</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>NannymudScripts</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>GUI</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
GUI = GUI or {}</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>CSS Man</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
-- CSSMan by Vadi. Public domain.

CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == "string", "CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new")

  for line in stylesheet:gmatch("[^\r\n]+") do
    local attribute, value = line:match("^(.-):(.-);$")
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,": ", v, ";"}) end
  return concat(lines, "\n")
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == "table", "CSSMan:settable: table expected, got "..type(tbl))

  self.stylesheet = tbl
end</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Set Borders</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
local w,h = getMainWindowSize()
setBorderLeft(0)
setBorderTop(0)
setBorderBottom(h/20)
setBorderRight(w/3)</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Create Background</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
GUI.BackgroundCSS = CSSMan.new([[
  background-color: rgb(20,20,20);
]])

--GUI.Left = Geyser.Label:new({
--  name = "GUI.Left",
--  x = 0, y = 0,
--  width = "12.5%",
--  height = "100%",
--})
--GUI.Left:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Right = Geyser.Label:new({
  name = "GUI.Right",
  x = "-33%", y = 0,
  width = "33%",
  height = "100%",
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

--[[
GUI.Top = Geyser.Label:new({
  name = "GUI.Top",
  x = "12.5%", y = 0,
  width = "75%",
  height = "5%",
})
GUI.Top:setStyleSheet(GUI.BackgroundCSS:getCSS())
--]]

GUI.Bottom = Geyser.Label:new({
  name = "GUI.Bottom",
  x = "0%", y = "95%",
  width = "66%",
  height = "5%",
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Gauges</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
GUI.Footer = Geyser.HBox:new({
  name = "GUI.Footer",
  x = 0, y = 0,
  width = "100%",
  height = "100%",
},GUI.Bottom)

GUI.LeftColumn = Geyser.VBox:new({
  name = "GUI.LeftColumn",
},GUI.Footer)

GUI.RightColumn = Geyser.VBox:new({
  name = "GUI.RightColumn",
},GUI.Footer)

GUI.GaugeBackCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  background-color: rgba(0,0,0,0);
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.Health = Geyser.Gauge:new({
  name = "GUI.Health",
},GUI.LeftColumn)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","red")
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
--GUI.Health:setValue(202,202)
GUI.Health.front:echo("GUI.Health")

GUI.Mana = Geyser.Gauge:new({
  name = "GUI.Mana",
},GUI.RightColumn)
GUI.Mana.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","blue")
GUI.Mana.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
--GUI.Mana:setValue(202,202)
GUI.Mana.front:echo("GUI.Mana")</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>Create Comm Area</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
GUI.CommRow = Geyser.VBox:new({
  name = "GUI.CommRow",
  x = 0, y = 0,
  width = "100%", height = "50%",
},GUI.Right)

--[[
GUI.testlabel2 = Geyser.Label:new({
  name = "testlabel2",
  x = "25%", y = 0,
  width = "25%", height = "100%",
  fgColor = "white",
  color = "black",
  message = "TestComm"
},GUI.CommRow)
--]]

GUI.CommRow.Cons = Geyser.MiniConsole:new({
  name="ChatConsole",
  x=0, y=0,
  autoWrap = true,
  color = "black",
  scrollBar = true,
  fontSize = 8,
  width="100%", height="100%",
},GUI.CommRow)</script>
					<eventHandlerList />
				</Script>
				<Script isActive="yes" isFolder="no">
					<name>MP Area</name>
					<packageName></packageName>
					<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
-- Multiplayer gagues
if GUI.mp == nil then 
  GUI.mp = Geyser.Label:new({
    name = "GUI.mp",
    x = 0, y = "50%",
    width = "100%", height = "50%",
    --message = "TestMp",
  },GUI.Right)
end

local slotCount = 0

--[[
GUI.mp["Lightbender"] = Geyser.HBox:new({
  name = "GUI.Lightbender",
  x = 0, --y = 0,
  width = "100%",
  height = "40px",
},GUI.mp)

GUI.mp.MpChar = Geyser.Label:new({
  name = "testlabel",
  x = 0, y = 0,
  width = "25%", height = "100%",
  fgColor = "white",
  color = "black",
  message = "Lightbender: "
},GUI.mp["Lightbender"])

GUI.mp["Lightbender"].MpHealth = Geyser.Gauge:new({
  name = "GUI.mp.Lightbender.MpHealth",
},GUI.mp["Lightbender"])
GUI.mp["Lightbender"].MpHealth.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","red")
GUI.mp["Lightbender"].MpHealth.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
--GUI.Health:setValue(202,202)
GUI.mp["Lightbender"].MpHealth.front:echo("GUI.Health")

GUI.mp["Lightbender"].MpMana = Geyser.Gauge:new({
  name = "GUI.mp.Lightbender.MpMana",
},GUI.mp["Lightbender"])
GUI.mp["Lightbender"].MpMana.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set("background-color","blue")
GUI.mp["Lightbender"].MpMana.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
--GUI.Mana:setValue(202,202)
GUI.mp["Lightbender"].MpMana.front:echo("GUI.Mana")
--]]

function MpSlot(char_in,hp_in,hpmax_in,sp_in,spmax_in)
  if GUI.mp[char_in] == nil then  
    --local get_mp_new_y_offset = table.size(GUI.mp)
    
    --echo("MP size: " .. get_mp_new_y_offset)
    GUI.mp[char_in] = Geyser.HBox:new({
      -- name = "GUI.Lightbender",
      name = "GUI." .. char_in,
      x = 0, y = -(40 + 40 * slotCount),
      width = "100%",
      height = "40px",
    },GUI.mp)
    
    slotCount = slotCount + 1
  end
  
  GUI.mp[char_in].MpChar = Geyser.Label:new({
    name = char_in .. "Label",
    x = 0, y = 0,
    width = "25%", height = "100%",
    fgColor = "white",
    color = "black",
    -- message = "Lightbender: "
    message = char_in .. ": "
  },GUI.mp[char_in])
  
  GUI.mp[char_in].MpHealth = Geyser.Gauge:new({
    -- name = "GUI.mp.Lightbender.MpHealth",
    name = "GUI.mp." .. char_in .. ".MpHealth",
  },GUI.mp[char_in])
  GUI.mp[char_in].MpHealth.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
  GUI.GaugeFrontCSS:set("background-color","red")
  GUI.mp[char_in].MpHealth.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
  --GUI.mp[char_in].MpHealth:setValue(100,202)
  GUI.mp[char_in].MpHealth:setValue(hp_in,hpmax_in)
  GUI.mp[char_in].MpHealth.front:echo(hp_in .. "/" .. hpmax_in .. " HP")
  
  GUI.mp[char_in].MpMana = Geyser.Gauge:new({
    -- name = "GUI.mp.Lightbender.MpMana",
    name = "GUI.mp." .. char_in .. ".MpMana",
  },GUI.mp[char_in])
  GUI.mp[char_in].MpMana.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
  GUI.GaugeFrontCSS:set("background-color","blue")
  GUI.mp[char_in].MpMana.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
  --GUI.Mana:setValue(202,202)
  GUI.mp[char_in].MpMana:setValue(sp_in,spmax_in)
  GUI.mp[char_in].MpMana.front:echo(sp_in .. "/" .. spmax_in .. " HP")
end

--MpSlot("Lightbender",200,202,100,202)
--MpSlot("Lightbender",186,202,100,202)
--MpSlot("Lightbender",192,202,100,202)
--MpSlot("Qantaqa",100,186,120,186)</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<Script isActive="yes" isFolder="no">
				<name>multiplayer_share_hp</name>
				<packageName></packageName>
				<script>-- This is the function that will be called when the event is raised.
-- "event" is set to the event name.
-- "arg" is the argument(s) provided with raiseEvent/rasieGlobalEvent.
-- "profile" - Is the profile name from where the raiseGlobalEvent where triggered from
--             It is 'nil' if raiseEvent() was used.
function onMultiplayerShareHp(event, arg, profile)
  -- echo("Event: " .. event .. "\n")
  -- echo("Arg  : " .. arg .. "\n")
  -- If the event is not raised with raiseGlobalEvent() profile will be 'nil'
  -- echo("Profile: " .. (profile or "Local") .. "\n")
  
  local mpchar = string.match(arg, "Character:(%w+)")
  local mphp = tonumber(string.match(arg, "hp:(%d+)"))
  local mphpmax = tonumber(string.match(arg, "hp:%d+/(%d+)"))
  local mpsp = tonumber(string.match(arg, "sp:(%d+)"))
  local mpspmax = tonumber(string.match(arg, "sp:%d+/(%d+)"))
  --echo("Test: " .. mpchar .. mphp .. mphpmax .. mpsp .. mpspmax)
  
  NannymudVariables = NannymudVariables or {}
  NannymudVariables.char = NannymudVariables.char or {}
  NannymudVariables.char[mpchar] = NannymudVariables.char[mpchar] or {}
  
  NannymudVariables.char[mpchar].hp = mphp
  NannymudVariables.char[mpchar].hpmax = mphpmax
  NannymudVariables.char[mpchar].sp = mpsp
  NannymudVariables.char[mpchar].spmax = mpspmax
  
  MpSlot(mpchar,mphp,mphpmax,mpsp,mpspmax)
  --echo("\n")
  --echo(table.size(GUI.Health))
  --echo(" ")
  --echo(table.size(GUI.nosuchitem))
end

-- Register the event handler.
registerAnonymousEventHandler("multiplayer_share_hp", "onMultiplayerShareHp")</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>multiplayer_share_command</name>
				<packageName></packageName>
				<script>-- This is the function that will be called when the event is raised.
-- "event" is set to the event name.
-- "arg" is the argument(s) provided with raiseEvent/rasieGlobalEvent.
-- "profile" - Is the profile name from where the raiseGlobalEvent where triggered from
--             It is 'nil' if raiseEvent() was used.
function onMultiplayerParseCommand(event, arg, profile)
  -- echo("Event: " .. event .. "\n")
  -- echo("Arg  : " .. arg .. "\n")
  -- If the event is not raised with raiseGlobalEvent() profile will be 'nil'
  -- echo("Profile: " .. (profile or "Local") .. "\n")
  --echo(arg)
  local mpchar = string.match(arg, "^(%w+)")
  local mpcommand = string.match(arg, "%w+ (.+)")
  --echo("Char " .. mpchar)
  --echo("Command " .. mpcommand)
  
  local currentchar = NannymudVariables.currentcharacter

  if string.lower(mpchar) == string.lower(currentchar) then
    expandAlias(mpcommand)
  end

end

-- Register the event handler.
registerAnonymousEventHandler("multiplayer_share_command", "onMultiplayerParseCommand")</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>multiplayer_share_communication</name>
				<packageName></packageName>
				<script>-- This is the function that will be called when the event is raised.
-- "event" is set to the event name.
-- "arg" is the argument(s) provided with raiseEvent/rasieGlobalEvent.
-- "profile" - Is the profile name from where the raiseGlobalEvent where triggered from
--             It is 'nil' if raiseEvent() was used.
function onMultiplayerParseCommunication(event, arg, profile)
  GUI.CommRow.Cons:echo(arg)
end

-- Register the event handler.
registerAnonymousEventHandler("multiplayer_share_communication", "onMultiplayerParseCommunication")</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage />
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
